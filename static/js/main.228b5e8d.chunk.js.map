{"version":3,"sources":["components/KeyPad/index.js","components/Display/index.js","App.js","index.js"],"names":["KeyPad","value","label","handleClick","className","onClick","event","target","clsx","Display","display","match","length","Number","toExponential","result","str","split","replace","join","addComma","App","useState","memory","setMemory","setDisplay","operator","setOperator","waiting","setWaiting","calculate","prevValue","nextValue","newValue","parseFloat","String","handlePlusMinus","substring","test","nextOperator","inputValue","currentValue","handleCalculate","number","isSelected","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.228b5e8d.chunk.js","sourcesContent":["import \"./KeyPad.scss\";\r\nimport clsx from \"clsx\";\r\n\r\nconst KeyPad = ({ value, label, handleClick, className }) => {\r\n  return (\r\n    <button\r\n      value={value}\r\n      onClick={(event) => handleClick(event.target.value)}\r\n      className={clsx(\"button\", className)}\r\n    >\r\n      {label ? label : value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default KeyPad;\r\n","import \"./Display.scss\";\r\n\r\nconst Display = ({ display }) => {\r\n  const addComma = (result) => {\r\n    const str = result.split(\".\");\r\n    // các số trước dấu \".\" tự thêm \",\" vào mỗi 3 số nằm ở cuối\r\n    str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\r\n    return str.join(\".\");\r\n  };\r\n  return (\r\n    <div className=\"display\">\r\n      <p>\r\n        {display.match(/\\d/g) && display.match(/\\d/g).length > 9\r\n          ? // nếu kết quả quá lớn(> 9 chữ số giới hạn, không tính dấu \".\", \",\"...) => hiển thị kiểu Exponential\r\n            Number(display).toExponential(2)\r\n          : addComma(display)}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import { useState } from \"react\";\nimport KeyPad from \"./components/KeyPad/\";\nimport Display from \"./components/Display\";\nimport \"./App.scss\";\n\nconst App = () => {\n  const [memory, setMemory] = useState(null);\n  const [display, setDisplay] = useState(\"0\");\n  const [operator, setOperator] = useState(null);\n  const [waiting, setWaiting] = useState(false);\n\n  const calculate = {\n    \"/\": (prevValue, nextValue) => prevValue / nextValue,\n    \"*\": (prevValue, nextValue) => prevValue * nextValue,\n    \"+\": (prevValue, nextValue) => prevValue + nextValue,\n    \"-\": (prevValue, nextValue) => prevValue - nextValue,\n    \"=\": (prevValue, nextValue) => nextValue,\n  };\n\n  const handleCalculate = (nextOperator) => {\n    const inputValue = parseFloat(display);\n    if (memory == null) {\n      setMemory(inputValue);\n    } else if (operator) {\n      const currentValue = memory || 0;\n      const newValue = calculate[operator](currentValue, inputValue);\n\n      setMemory(newValue);\n      setDisplay(String(newValue));\n    }\n    setWaiting(true);\n    setOperator(nextOperator);\n  };\n\n  const handleNumber = (number) => {\n    if (waiting) {\n      setDisplay(String(number));\n      setWaiting(false);\n    } else {\n      setDisplay(display === \"0\" ? String(number) : display + number);\n    }\n  };\n\n  const handleClear = () => {\n    setMemory(null);\n    setDisplay(\"0\");\n    setOperator(null);\n    setWaiting(false);\n  };\n\n  const handleBackspace = () => {\n    setDisplay(display.substring(0, display.length - 1) || \"0\");\n  };\n\n  const handlePlusMinus = () => {\n    const newValue = parseFloat(display) * -1;\n    setDisplay(String(newValue));\n  };\n\n  const handleDot = () => {\n    if (!/\\./.test(display)) {\n      setDisplay(display + \".\");\n      setWaiting(false);\n    }\n  };\n\n  const handleClick = (value) => {\n    switch (value) {\n      case \"C\":\n        handleClear();\n        break;\n      case \"+/-\":\n        handlePlusMinus();\n        break;\n      case \"b\":\n        handleBackspace();\n        break;\n      case \".\":\n        handleDot();\n        break;\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n      case \"=\":\n        handleCalculate(value);\n        break;\n      default:\n        handleNumber(value);\n    }\n  };\n\n  const isSelected = (value) => (operator === value ? \"selected\" : \"orange\");\n\n  return (\n    <main className=\"main\">\n      <div className=\"container\">\n        <Display display={display} />\n        <KeyPad value=\"C\" handleClick={handleClick} className=\"gray\" />\n        <KeyPad value=\"+/-\" handleClick={handleClick} className=\"gray\" />\n        <KeyPad\n          label=\"&#9003;\"\n          value=\"b\"\n          handleClick={handleClick}\n          className=\"gray\"\n        />\n        <KeyPad\n          label=\"&divide;\"\n          value=\"/\"\n          handleClick={handleClick}\n          className={isSelected(\"/\")}\n        />\n        <KeyPad value=\"7\" handleClick={handleClick} />\n        <KeyPad value=\"8\" handleClick={handleClick} />\n        <KeyPad value=\"9\" handleClick={handleClick} />\n        <KeyPad\n          label=\"&times;\"\n          value=\"*\"\n          handleClick={handleClick}\n          className={isSelected(\"*\")}\n        />\n        <KeyPad value=\"4\" handleClick={handleClick} />\n        <KeyPad value=\"5\" handleClick={handleClick} />\n        <KeyPad value=\"6\" handleClick={handleClick} />\n        <KeyPad\n          label=\"&minus;\"\n          value=\"-\"\n          handleClick={handleClick}\n          className={isSelected(\"-\")}\n        />\n        <KeyPad value=\"1\" handleClick={handleClick} />\n        <KeyPad value=\"2\" handleClick={handleClick} />\n        <KeyPad value=\"3\" handleClick={handleClick} />\n        <KeyPad\n          label=\"&#43;\"\n          value=\"+\"\n          handleClick={handleClick}\n          className={isSelected(\"+\")}\n        />\n        <KeyPad value=\"0\" handleClick={handleClick} className=\"button_0\" />\n        <KeyPad value=\".\" handleClick={handleClick} />\n        <KeyPad value=\"=\" handleClick={handleClick} className=\"orange\" />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}